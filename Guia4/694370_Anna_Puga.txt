Anna Puga - 694370 - Guia 4
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ex1. Construir a tabela-verdade para as proposições
e verificar pelas respectivas tabelas-verdades implementadas em Verilog:

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
a.) s = x' . ( y'+ z )'

 x  y  z     =>     x'  y'  z'     =>  y'+ z  =>  ( y'+ z )' =>  x' . ( y'+ z )'
 0  0  0    =>     1   1   1     =>     1    =>       0        =>	0
 0  0  1    =>     1   1   0     =>     1    =>       0        => 	0
 0  1  0    =>     1   0   1     =>     0    =>       1        =>	1
 0  1  1    =>     1   0   0     =>     1    =>       0        =>	0
 1  0  0    =>     0   1   1     =>     1    =>       0        =>	0
 1  0  1    =>     0   1   0     =>     1    =>       0        =>	0	   		
 1  1  0    =>     0   0   1     =>     0    =>       1        =>	0	   		
 1  1  1    =>     0   0   0     =>     1    =>       0        =>	0   

-----------------------------------------------------------------------------------
b.) ( x'+y' )' . z'

 x  y  z     =>     x'  y'  z'     =>  x'+y'  =>  ( x'+y' )' =>  ( x'+y' )' . z'
 0  0  0    =>     1   1   1     =>    1     =>       0        =>	0
 0  0  1    =>     1   1   0     =>    1      =>      0        => 	0
 0  1  0    =>     1   0   1     =>    1     =>       0        =>	0
 0  1  1    =>     1   0   0     =>    1    =>        0        =>	0
 1  0  0    =>     0   1   1     =>    1     =>       0        =>	0
 1  0  1    =>     0   1   0     =>    1    =>        0        =>	0	   		
 1  1  0    =>     0   0   1     =>    0     =>       1        =>	1	   		
 1  1  1    =>     0   0   0     =>    0     =>       1        =>	0  

-----------------------------------------------------------------------------------
c.) ( x'.y )' . z'

x  y  z     =>     x'  y'  z'     =>  x'. y   =>  ( x'. y )' =>  ( x'.y' )' . z'
0  0  0    =>     1   1   1     =>    0     =>       1       =>	1
0  0  1    =>     1   1   0     =>    0     =>       1       => 	0
0  1  0    =>     1   0   1     =>    1     =>       0       =>	0
0  1  1    =>     1   0   0     =>    1     =>       0       =>	0
1  0  0    =>     0   1   1     =>    0     =>       1       =>	1
1  0  1    =>     0   1   0     =>    0     =>       1       =>	0	   		
1  1  0    =>     0   0   1     =>    0     =>       1       =>	1	   		
1  1  1    =>     0   0   0     =>    0     =>       1       =>	0

-----------------------------------------------------------------------------------
d.) ( x . y )' . z

x  y  z     =>     x'  y'  z'     =>   x. y   =>  ( x . y )'  =>  ( x . y )' . z
0  0  0    =>     1   1   1     =>    0     =>       1        =>	0
0  0  1    =>     1   1   0     =>    0     =>       1        => 	1
0  1  0    =>     1   0   1     =>    0     =>       1        =>	0
0  1  1    =>     1   0   0     =>    0     =>       1        =>	1
1  0  0    =>     0   1   1     =>    0     =>       1        =>	0
1  0  1    =>     0   1   0     =>    0     =>       1        =>	1	   		
1  1  0    =>     0   0   1     =>    1     =>       0        =>	0	   		
1  1  1    =>     0   0   0     =>    1     =>       0        =>	0

-----------------------------------------------------------------------------------
e.) ( x + y' ) . ( y' + z')

x  y  z     =>      x'  y'  z'     =>  x + y' =>   y' + z'    =>  ( x + y' ) . ( y' + z')
0  0  0    =>     1   1   1     =>    1      =>       1        =>	      1
0  0  1    =>     1   1   0     =>    1      =>       1        => 	      1
0  1  0    =>     1   0   1     =>    0      =>       1        =>	      0
0  1  1    =>     1   0   0     =>    0      =>       0        =>	      0
1  0  0    =>     0   1   1     =>    1      =>       1        =>	      1
1  0  1    =>     0   1   0     =>    1      =>       1        =>	      1	   		
1  1  0    =>     0   0   1     =>    1      =>       1        =>	      1	   		
1  1  1    =>     0   0   0     =>    1      =>       0        =>	      0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ex2. Simplificar as expressões abaixo pelas propriedades da álgebra de Boole
e verificar pelas respectivas tabelas-verdades implementadas em Verilog:

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
a.) x . ( x' + y )'
Simplificação -> 
x . ( x' + y )' = x . x''. y' (De Morgan) = x . x . y' = x . y' (Idempotencia)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
b.) ( x + y ) + ( x . y' )
Simplificação -> 
( x + y ) + ( x . y' ) = ((x + y) + x) . ((x + y) + y') (Distributiva) = (x + y) . (x+1) (Idempotencia e Tautologia) = x + (y . 1) (Distributiva)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
c.) ( x' . y' )' . ( x + y )
Simplificação ->
( x' . y' )' . ( x + y ) = x'' + y'' . (x+y) (De Morgan) = x + y . (x + y) = x + y (Idempotencia)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
d.) ( x . y )' + ( x + y )'
Simplificação ->
( x . y )' + ( x + y )' = (x' + y') + ( x' . y' )(De Morgan) = ((x'+y')+x').((x'+y')+y') (Distributiva) = (x' + y').(x' + y')(Associativa e Idempotencia)= (x' + y') (Idempotencia)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
e.) ( y + x )' . ( y' + x' )
Simplificação ->
( y + x )' . ( y' + x' ) = (y' . x') . (y' + x') (De Morgan)= ((y'.x').y')+((y'.x').x') (Distributiva) = (y'.x')+(y'.x')(Associativa e Idempotencia) = y' . x'(Idempotencia)

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ex3. Montar as tabelas-verdades expressas pelas somas de produtos abaixo
e verificar pelas respectivas tabelas-verdades implementadas em Verilog:

--------------------------------------------------------------------------------------------------------------------
a)  f (x,y,z) = Σ m ( 1, 2, 5, 6 )

x y z  =>  mintermos  =>  SoP(1,2,5,6)
0 0 0 =>     x'•y'•z'  		0
0 0 1 =>     x'•y'•z   		1
0 1 0 =>     x'•y •z' 		1
0 1 1 =>     x'•y •z   		0		
1 0 0 =>     x•y'•z'  		0
1 0 1 =>     x•y'•z 		1
1 1 0 =>     x•y•z' 		1
1 1 1 =>     x•y•z 		0

-----------------------------------------------------------------------------------
b) f (x,y,z) = Σ m ( 1, 3, 4, 7 )

x y z  =>  mintermos  =>  SoP(1,3,4,7)
0 0 0 =>     x'•y'•z'  		0
0 0 1 =>     x'•y'•z   		1
0 1 0 =>     x'•y •z' 		0
0 1 1 =>     x'•y •z   		1		
1 0 0 =>     x•y'•z'  		1
1 0 1 =>     x•y'•z 		0
1 1 0 =>     x•y•z' 		0
1 1 1 =>     x•y•z 		1

-----------------------------------------------------------------------------------
c) f (x,y,w,z) = Σ m ( 1, 2, 6, 8, 9, 10, 12 )

x y w z  =>     mintermos  =>  SoP( 1, 2, 6, 8, 9, 10, 12 )
0 0 0 0  =>     x'•y'•w'•z'  		0
0 0 0 1  =>     x'•y'•w'•z   		1
0 0 1 0  =>     x'•y'•w •z'		1
0 0 1 1  =>     x'•y'•w •z 		0		
0 1 0 0  =>     x'•y •w'•z'		0
0 1 0 1  =>     x'•y •w'•z		0
0 1 1 0  =>     x'•y •w •z' 		1
0 1 1 1  =>     x'•y •w •z		0
1 0 0 0  =>     x •y'•w'•z'		1
1 0 0 1  =>     x •y'•w'•z		1
1 0 1 0  =>     x •y'•w •z'		1
1 0 1 1  =>     x •y'•w •z		0
1 1 0 0  =>     x •y •w'•z'		1
1 1 0 1  =>     x •y •w'•z		0
1 1 1 0  =>     x •y •w •z'		0
1 1 1 1  =>     x •y •w •z		0

-----------------------------------------------------------------------------------
d) f (x,y,w,z) = Σ m ( 0, 2, 5, 7, 8, 10, 13 )

x y w z  =>     mintermos  =>  SoP ( 0, 2, 5, 7, 8, 10, 13 )
0 0 0 0  =>     x'•y'•w'•z'  		1
0 0 0 1  =>     x'•y'•w'•z   		0
0 0 1 0  =>     x'•y'•w •z'		1
0 0 1 1  =>     x'•y'•w •z 		0		
0 1 0 0  =>     x'•y •w'•z'		0
0 1 0 1  =>     x'•y •w'•z		1
0 1 1 0  =>     x'•y •w •z' 		0
0 1 1 1  =>     x'•y •w •z		1
1 0 0 0  =>     x •y'•w'•z'		1
1 0 0 1  =>     x •y'•w'•z		0
1 0 1 0  =>     x •y'•w •z'		1
1 0 1 1  =>     x •y'•w •z		0
1 1 0 0  =>     x •y •w'•z'		0
1 1 0 1  =>     x •y •w'•z		1
1 1 1 0  =>     x •y •w •z'		0
1 1 1 1  =>     x •y •w •z		0

-----------------------------------------------------------------------------------
e) f (x,y,w,z) = Σ m ( 1, 2, 3, 5, 7, 11 )

x y w z  =>     mintermos  =>  SoP( 1, 2, 3, 5, 7, 11 )
0 0 0 0  =>     x'•y'•w'•z'  		0
0 0 0 1  =>     x'•y'•w'•z   		1
0 0 1 0  =>     x'•y'•w •z'		1
0 0 1 1  =>     x'•y'•w •z 		1		
0 1 0 0  =>     x'•y •w'•z'		0
0 1 0 1  =>     x'•y •w'•z		1
0 1 1 0  =>     x'•y •w •z' 		0
0 1 1 1  =>     x'•y •w •z		1
1 0 0 0  =>     x •y'•w'•z'		0
1 0 0 1  =>     x •y'•w'•z		0
1 0 1 0  =>     x •y'•w •z'		0
1 0 1 1  =>     x •y'•w •z		1
1 1 0 0  =>     x •y •w'•z'		0
1 1 0 1  =>     x •y •w'•z		0
1 1 1 0  =>     x •y •w •z'		0
1 1 1 1  =>     x •y •w •z		0
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ex4. Montar as expressões PoS equivalentes aos produtos das somas abaixo
e verificar pelas respectivas tabelas-verdades implementadas em Verilog:

----------------------------------------------------------------------------------------------------------------
a) F (X,Y,Z) = π M ( 1, 2, 3, 7 )

x y z  =>  MAXTERMOS  =>  PoS ( 1, 2, 3, 7 )
0 0 0 =>     x +y +z  		1
0 0 1 =>     x +y +z'   	0
0 1 0 =>     x +y'+z 		0
0 1 1 =>     x +y'+z'   	0		
1 0 0 =>     x'+y +z  		1
1 0 1 =>     x'+y +z' 		1
1 1 0 =>     x'+y'+z 		1
1 1 1 =>     x'+y'+z' 		0

-----------------------------------------------------------------------------------
b) F (X,Y,Z) = π M ( 0, 1, 2, 5, 6 )

x y z  =>  MAXTERMOS  =>  PoS( 0, 1, 2, 5, 6 )
0 0 0 =>     x +y +z  		0
0 0 1 =>     x +y +z'   	0
0 1 0 =>     x +y'+z 		0
0 1 1 =>     x +y'+z'   	1		
1 0 0 =>     x'+y +z  		1
1 0 1 =>     x'+y +z' 		0
1 1 0 =>     x'+y'+z 		0
1 1 1 =>     x'+y'+z' 		1

-----------------------------------------------------------------------------------
c) F (X,Y,W,Z) = π M ( 0, 1, 2, 3, 5, 8, 11, 13 )

x y  w z  =>  MAXTERMOS  =>  PoS( 0, 1, 2, 3, 5, 8, 11, 13 )
0 0 0 0 =>    x +y +w +z 		0
0 0 0 1 =>    x +y +w +z' 		0
0 0 1 0 =>    x +y +w'+z  		0
0 0 1 1 =>    x +y +w'+z'    		0		
0 1 0 0 =>    x +y'+w +z 		1
0 1 0 1 =>    x +y'+w +z' 		0
0 1 1 0 =>    x +y'+w'+z 		1
0 1 1 1 =>    x +y'+w'+z' 		1
1 0 0 0 =>    x'+y +w +z 		0
1 0 0 1 =>    x'+y +w +z'    		1
1 0 1 0 =>    x'+y +w'+z  		1
1 0 1 1 =>    x'+y +w'+z'    		0		
1 1 0 0 =>    x'+y'+w +z 		1
1 1 0 1 =>    x'+y'+w +z' 		0
1 1 1 0 =>    x'+y'+w'+z		1
1 1 1 1 =>    x'+y'+w'+z' 		1

-----------------------------------------------------------------------------------
d) F (X,Y,W,Z) = π M ( 0, 2, 4, 6, 9, 10, 11 )

x y  w z  =>  MAXTERMOS  =>  PoS( 0, 2, 4, 6, 9, 10, 11 )
0 0 0 0 =>    x +y +w +z 		0
0 0 0 1 =>    x +y +w +z' 		1
0 0 1 0 =>    x +y +w'+z  		0
0 0 1 1 =>    x +y +w'+z'    		1		
0 1 0 0 =>    x +y'+w +z 		0
0 1 0 1 =>    x +y'+w +z' 		1
0 1 1 0 =>    x +y'+w'+z 		0
0 1 1 1 =>    x +y'+w'+z' 		1
1 0 0 0 =>    x'+y +w +z 		1
1 0 0 1 =>    x'+y +w +z'    		0
1 0 1 0 =>    x'+y +w'+z  		0
1 0 1 1 =>    x'+y +w'+z'    		0		
1 1 0 0 =>    x'+y'+w +z 		1
1 1 0 1 =>    x'+y'+w +z' 		1
1 1 1 0 =>    x'+y'+w'+z		1
1 1 1 1 =>    x'+y'+w'+z' 		1

-----------------------------------------------------------------------------------
e) F (X,Y,W,Z) = π M ( 0, 1, 2, 4, 7, 12, 15 )

x y  w z  =>  MAXTERMOS  =>  PoS( 0, 1, 2, 4, 7, 12, 15 )
0 0 0 0 =>    x +y +w +z 		0
0 0 0 1 =>    x +y +w +z' 		0
0 0 1 0 =>    x +y +w'+z  		0
0 0 1 1 =>    x +y +w'+z'    		1		
0 1 0 0 =>    x +y'+w +z 		0
0 1 0 1 =>    x +y'+w +z' 		1
0 1 1 0 =>    x +y'+w'+z 		1
0 1 1 1 =>    x +y'+w'+z' 		0
1 0 0 0 =>    x'+y +w +z 		1
1 0 0 1 =>    x'+y +w +z'    		1
1 0 1 0 =>    x'+y +w'+z  		1
1 0 1 1 =>    x'+y +w'+z'    		1		
1 1 0 0 =>    x'+y'+w +z 		0
1 1 0 1 =>    x'+y'+w +z' 		1
1 1 1 0 =>    x'+y'+w'+z		1
1 1 1 1 =>    x'+y'+w'+z' 		0

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Ex5. Identificar as expressões SoP e PoS equivalentes às tabelas abaixo
e verificar pelas respectivas tabelas-verdades implementadas em Verilog:

a) SoP(0,1,3) = Σ n(0,1,3) = 1
     PoS(2) = π n(2) = 0


b) SoP(1,2) = Σ n(1,2) = 1
     PoS(0,3) = π n(0,3) = 0


c) SoP(0,1,3,4,5,7) = Σ n(0,1,3,4,5,7) = 1
     PoS(2,6) = π n(2,6) = 0


d) SoP(0,2,4,5,6) = Σ n(0,2,4,5,6) = 1
     PoS(1,3,7) = π n(1,3,7) = 0


e) SoP(0,2,4,8,10,11,13,15) = Σ n(0,2,4,8,10,11,13,15) = 1
     PoS(1,3,5,6,7,9,12,14) = π n(1,3,5,6,7,9,12,14) = 0


