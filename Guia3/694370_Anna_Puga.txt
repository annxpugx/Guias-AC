694370 - Anna Puga Campos Rodrigues

-----------------------------------------------------------------------------------------------------------------------------
01.) Determinar os complementos para os valores e as quantidades de bits indicadas:
a.) C1,6 (1001(2)) = 001001(2) = C1 -|> 110110(2)
b.) C1,8 (1110(2)) = 00001110(2) = C1 -|> 11110001(2)
c.) C2,6 (111011(2)) = C1 -|> 000100(2) = C2 -|> 000101(2)
d.) C2,7 (10101(2)) = 0010101(2) = C1 -|> 1101010(2) = C2 -|> 1101011(2)
e.) C2,8 (110001(2)) = 00110001(2) = C1 -|> 11001110(2) = C2 -|> 11001111(2)

-----------------------------------------------------------------------------------------------------------------------------
02.) Determinar os complementos para os valores e as quantidades indicadas:
a.) C1,6 (132(4)) = C1,6 (011110(2)) = 100001(2)
b.) C1,8 (5E(16)) = C1,8 (0101 1110(2)) = 10100001(2)
c.) C2,6 (301(4)) = C2,6 (110001(2)) = 001111(2)
d.) C2,7 (127(8)) = C2,7 (1010111(2)) = 0101001(2)
e.) C2,8 (C7(16)) = C2,8 (1100 0111(2)) = 00111001(2)

-----------------------------------------------------------------------------------------------------------------------------
03.) Determinar os valores positivos equivalentes aos complementos indicados:
a.) 1 0110(2) =  32(2**5 - bits)-22(1 0110) = 1 0110 - 1 = 10101 -> 01010 = +10(10)
b.) 1 10011(2) = 64(2**6) - 51(1 10011) ->  1 10010 -> 0 01101 (2) = +13(10)
c.)  1 11101(2) = 64(2**6) - 61(1 11101) -> 1 111 00 -> 0 000 11 (2)
d.) 1 010111(2) = 128(2**7) - 87(1 010111) -> 1 010110 -> 0 101001(2)
e.) 1 0101001(2) = 1 0101000 -> 0 1010111(2) = 57(16)

-----------------------------------------------------------------------------------------------------------------------------
04.) Fazer as operações indicadas mediante uso de complemento:
a.) 11001(2) - 1101(2) = 11001 + [0011] = [1]0 1100 = 0 1100(2)
b.) 101,0001(2) - 10,01(2) = 101,0001 - 10,0100 = 101,0001 + [01,1100] = 10,1101(2) 
c.) 231(4) - 132(4) = 101101(2) - 011110(2) = 101101 + [00010] = 0 1111 = 33(4)
d.) 321(8) - 123(8) = 011010001 - 001010011 = 011010001 + [ 110101101 ] =10 0111 1110(2) = 1176(8)
e.) 8E6(16) - A1B(16) = 100011100110 - 101000011011 = 100011100110 + [ 010111100101 ] = 1110 1100 1011 = ECB(16)

-----------------------------------------------------------------------------------------------------------------------------
05.) Executar as operações abaixo,
armazenar seus dados e resultados em registradores de 8 bits,
mostrar os valores resultantes em binário,
e usar complemento de 2 nas subtrações:
a.) 100010(2) – 1101 = 00100010 - 00001101 = 00100010 + [11110011] = [1] 0001 0101(2)
b.) 101,1101(2) – 2,5(8) = 0101,1101 - 0010,0101 =  0101,1101 + [1101,1011] = [1] 0011,1000(2)
c.) 213(4) – D(16) = 00100111 - 00001011 = 00100111 + [11110101] = [1] 0001 1100(2)
d.) AC(16) – 1001111(2) = 10101100 - 01001111 = 10101100 + [10110001] = [1] 0101 1101(2)
e.) 37(10) – 2A(16) = 00100101 - 00101010 = 00100101 + [11010110] = 1111 1011(2)


